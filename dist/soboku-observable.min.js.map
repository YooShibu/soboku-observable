{"version":3,"file":"soboku-observable.min.js","sources":["../src/sequenceEqual.ts","../src/observable.ts","../src/timer.ts"],"sourcesContent":["import { reporter, ReporterClass, toStateHolder, Reporter, ISArray, IStateHolder } from \"soboku\";\r\nimport { ISObservable } from \"../index.d\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nfunction isEqual(x: any, y: any): boolean {\r\n    return x === y;\r\n}\r\n\r\nclass SequenceEqualClass<T> extends SObservable<T, true, Reporter<T>> {\r\n    private readonly compare: (x: any, y: any) => boolean;\r\n    private readonly sequence: IStateHolder<T[]>;\r\n    private i = 0;\r\n\r\n    constructor(sequence: T[] | ISArray<T>, compare = isEqual) {\r\n        super(reporter<T>());\r\n        this.compare = compare;\r\n        this.sequence =  toStateHolder(sequence);\r\n    }\r\n\r\n    protected onInput(val: T): void {\r\n        const sequence = this.sequence.s();\r\n        if (this.compare(sequence[this.i], val) === false) {\r\n            this.i = 0;\r\n            return;\r\n        }\r\n        if (++this.i === sequence.length) {\r\n            this.i = 0;\r\n            this.output.next(true);\r\n        }\r\n    }\r\n\r\n    protected onReset() {\r\n        this.i = 0;\r\n    }\r\n    \r\n}\r\n\r\nexport function sequenceEqual<T>(sequence: T[] | ISArray<T>, compareFunc?: (x: T, y: T) => boolean): ISObservable<T, true, Reporter<T>> {\r\n    return new SequenceEqualClass(sequence, compareFunc);\r\n}\r\n","import { listener, reporter, Reporter, ReporterClass } from \"soboku\";\r\nimport { ISObservable } from \"../index.d\";\r\n\r\n\r\nexport abstract class SObservable<I, O, T extends Reporter<I>> implements ISObservable<I, O, T> {\r\n    public readonly input: T;\r\n    public readonly output = reporter<O>();\r\n    public readonly error = new ObservableErrorClass();\r\n    public readonly reset = reporter<true>();\r\n\r\n    constructor(input: T) {\r\n        this.input = input;\r\n        input.report(listener(this.onInput, this));\r\n        this.reset.report(listener(this.onReset, this));\r\n    }\r\n    \r\n    protected abstract onInput(val: I): void;\r\n    protected abstract onReset(): void;\r\n\r\n}\r\n\r\nexport  class ObservableErrorClass extends ReporterClass<Error> {\r\n\r\n    public next(err: Error) {\r\n        if (this.listenerCount() === 0) {\r\n            const unhandledError = new Error(`Unhandled observable error: ${err.name}: ${err.message}`);\r\n            unhandledError.name = \"UnhandledObservableErrorWarning\";\r\n            throw unhandledError;\r\n        }\r\n        return super.next(err);\r\n    }\r\n    \r\n}","import { listener, state, ReporterClass, toStateHolder, Atom, Reporter, State, IStateHolder } from \"soboku\";\r\nimport { ISObservable } from \"../index.d\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nabstract class TimerObservable extends SObservable<boolean, number, State<boolean>> {\r\n    protected readonly cb = () => this.output.next(Date.now());\r\n    protected readonly ms: IStateHolder<number>;\r\n    protected timer: NodeJS.Timer;\r\n    protected isRunning = false;\r\n\r\n    constructor(ms: Atom<number>) {\r\n        super(state(false));\r\n        const _ms = this.ms = toStateHolder(ms);\r\n        if (_ms instanceof ReporterClass)\r\n            _ms.report(listener(this.msChanged, this));\r\n    }\r\n\r\n    private msChanged(ms: number) {\r\n        if (this.isRunning) {\r\n            this.onInput(false);\r\n            this.onInput(true, ms);\r\n        }\r\n    }\r\n\r\n    protected onInput(trigger: boolean, ms?: number): void {\r\n        this.fire(trigger, ms || this.ms.s());\r\n        this.isRunning = trigger;\r\n    }\r\n\r\n    protected onReset() {\r\n        this.input.next(false);\r\n    }\r\n\r\n    protected abstract fire(trigger: boolean, ms: number): void;\r\n\r\n}\r\n\r\nclass IntervalObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        if (trigger === false) {\r\n            clearInterval(this.timer);\r\n        } else if (this.isRunning === false) {\r\n            this.timer = setInterval(this.cb, ms);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass TimeoutObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        clearTimeout(this.timer);\r\n        if (trigger) {\r\n            this.timer = setTimeout(this.cb, ms);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function interval(ms: Atom<number>): ISObservable<boolean, number, State<boolean>> {\r\n    return new IntervalObservable(ms);\r\n}\r\n\r\nexport function timeout(ms: Atom<number>): ISObservable<boolean, number, State<boolean>> {\r\n    return new TimeoutObservable(ms);\r\n}\r\n"],"names":["x","y","input","this","reporter","ObservableErrorClass","report","listener","onInput","reset","onReset","__extends","err","listenerCount","unhandledError","Error","name","message","_super","next","ReporterClass","sequence","compare","_this","toStateHolder","SequenceEqualClass","val","s","i","length","output","SObservable","ms","state","Date","now","_ms","msChanged","TimerObservable","isRunning","trigger","fire","IntervalObservable","clearInterval","timer","setInterval","cb","TimeoutObservable","clearTimeout","setTimeout","compareFunc"],"mappings":"iNAKA,WAAiBA,EAAQC,GACrB,OAAOD,IAAMC,ECFV,iBAeP,OATI,SAAYC,GAJIC,YAASC,aACTD,WAAQ,IAAIE,EACZF,WAAQC,aAGpBD,KAAKD,MAAQA,EACbA,EAAMI,OAAOC,WAASJ,KAAKK,QAASL,OACpCA,KAAKM,MAAMH,OAAOC,WAASJ,KAAKO,QAASP,yBAQzC,4DAWR,OAX2CQ,OAEhCN,iBAAP,SAAYO,GACR,GAA6B,IAAzBT,KAAKU,gBAAuB,CAC5B,IAAMC,EAAiB,IAAIC,MAAM,+BAA+BH,EAAII,UAASJ,EAAIK,SAEjF,MADAH,EAAeE,KAAO,kCAChBF,EAEV,OAAOI,YAAMC,eAAKP,OARiBQ,+BDPvC,WAAYC,EAA4BC,gBAAAA,KAAxC,MACIJ,YAAMd,2BAHFmB,IAAI,EAIRA,EAAKD,QAAUA,EACfC,EAAKF,SAAYG,gBAAcH,KAmBvC,OA3BoCV,OAWtBc,oBAAV,SAAkBC,GACd,IAAML,EAAWlB,KAAKkB,SAASM,KACa,IAAxCxB,KAAKmB,QAAQD,EAASlB,KAAKyB,GAAIF,KAI7BvB,KAAKyB,IAAMP,EAASQ,SACtB1B,KAAKyB,EAAI,EACTzB,KAAK2B,OAAOX,MAAK,IALjBhB,KAAKyB,EAAI,GASPH,oBAAV,WACItB,KAAKyB,EAAI,MAxBmBG,iBEEhC,WAAYC,GAAZ,MACId,YAAMe,SAAM,UANGV,KAAK,WAAM,OAAAA,EAAKO,OAAOX,KAAKe,KAAKC,QAG1CZ,aAAY,EAIlB,IAAMa,EAAMb,EAAKS,GAAKR,gBAAcQ,UAChCI,aAAehB,iBACfgB,EAAI9B,OAAOC,WAASgB,EAAKc,UAAWd,MAqBhD,OA/BuCZ,OAa3B2B,sBAAR,SAAkBN,GACV7B,KAAKoC,YACLpC,KAAKK,SAAQ,GACbL,KAAKK,SAAQ,EAAMwB,KAIjBM,oBAAV,SAAkBE,EAAkBR,GAChC7B,KAAKsC,KAAKD,EAASR,GAAM7B,KAAK6B,GAAGL,KACjCxB,KAAKoC,UAAYC,GAGXF,oBAAV,WACInC,KAAKD,MAAMiB,MAAK,OA1BeY,iBAiCvC,4DAUA,OAViCpB,OAEnB+B,iBAAV,SAAeF,EAAkBR,IACb,IAAZQ,EACAG,cAAcxC,KAAKyC,QACO,IAAnBzC,KAAKoC,YACZpC,KAAKyC,MAAQC,YAAY1C,KAAK2C,GAAId,QANbM,iBAYjC,4DASA,OATgC3B,OAElBoC,iBAAV,SAAeP,EAAkBR,GAC7BgB,aAAa7C,KAAKyC,OACdJ,IACArC,KAAKyC,MAAQK,WAAW9C,KAAK2C,GAAId,QALbM,0CFZhC,SAAiCjB,EAA4B6B,GACzD,OAAO,IAAIzB,EAAmBJ,EAAU6B,eEuB5C,SAAyBlB,GACrB,OAAO,IAAIU,EAAmBV,cAGlC,SAAwBA,GACpB,OAAO,IAAIe,EAAkBf"}