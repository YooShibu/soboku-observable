var sobservable=function(t,n){"use strict";function e(t,n){function e(){this.constructor=t}for(var r in n)n.hasOwnProperty(r)&&(t[r]=n[r]);t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}function r(t,n){return t===n}var i=function(){return function(t){this.output=n.reporter(),this.error=new o,this.reset=n.reporter(),this.input=t,t.report(n.listener(this.onInput,this)),this.reset.report(n.listener(this.onReset,this))}}(),o=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return e(n,t),n.prototype.next=function(n){if(0===this.listenerCount()){var e=new Error("Unhandled observable error: "+n.name+": "+n.message);throw e.name="UnhandledObservableErrorWarning",e}return t.prototype.next.call(this,n)},n}(n.ReporterClass),s=function(t){function i(e,i){void 0===i&&(i=r);var o=t.call(this,n.reporter())||this;return o.i=0,o.compare=i,o.sequence=n.toStateHolder(e),o}return e(i,t),i.prototype.onInput=function(t){var n=this.sequence.s();!1!==this.compare(n[this.i],t)?++this.i===n.length&&(this.i=0,this.output.next(!0)):this.i=0},i.prototype.onReset=function(){this.i=0},i}(i),u=function(t){function r(e){var r=t.call(this,n.state(!1))||this;r.cb=function(){return r.output.next(Date.now())},r.isRunning=!1;var i=r.ms=n.toStateHolder(e);return i instanceof n.ReporterClass&&i.report(n.listener(r.msChanged,r)),r}return e(r,t),r.prototype.msChanged=function(t){this.isRunning&&(this.onInput(!1),this.onInput(!0,t))},r.prototype.onInput=function(t,n){this.fire(t,n||this.ms.s()),this.isRunning=t},r.prototype.onReset=function(){this.input.next(!1)},r}(i),h=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return e(n,t),n.prototype.fire=function(t,n){!1===t?clearInterval(this.timer):!1===this.isRunning&&(this.timer=setInterval(this.cb,n))},n}(u),p=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return e(n,t),n.prototype.fire=function(t,n){clearTimeout(this.timer),t&&(this.timer=setTimeout(this.cb,n))},n}(u);return t.SObservable=i,t.sequenceEqual=function(t,n){return new s(t,n)},t.interval=function(t){return new h(t)},t.timeout=function(t){return new p(t)},t}({},soboku);
//# sourceMappingURL=soboku-observable.min.js.map
